"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['secret_key']


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False



ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    #My packages
    'rest_framework',
    'corsheaders',
    'django_filters',
    'storages',

    #My apps
    'search',
]

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]


CORS_ALLOW_ALL_ORIGINS = True 
CORS_ALLOW_CREDENTIALS = True



ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Set the MIME type for JavaScript files
# MIME_TYPES = {
#     'js': 'text/javascript',
# }

SECURE_CONTENT_TYPE_NOSNIFF = False


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

import pymysql
pymysql.install_as_MySQLdb()

#RDS
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': os.environ['name'],
#         'USER': os.environ['user'],
#         'PASSWORD':os.environ['password'],
#         'HOST':  os.environ['host'],
#         'PORT': '3306',
#     }
# }

#Local
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ['name'],
        'USER': os.environ['user'],
        'PASSWORD':os.environ['password'],
        'HOST':  'localhost',
        'PORT': '3306',
    }
}





# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/


# 讀取環境變量 IS_LOCAL 的值
IS_LOCAL = os.getenv('IS_LOCAL')
# if IS_LOCAL == True:
#本地配置
if DEBUG == True:
    STATIC_URL = '/static/'
    STATICFILES_DIRS =[
        os.path.join(BASE_DIR, "static")
        ] 
    # STATIC_ROOT = os.path.join(BASE_DIR, "static") #Deploy
# [BASE_DIR / "static",
#     #another directory ...
# ]

else:
    #告知Django要從S3讀取靜態檔案
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    #Amazon S3 Configuration
    AWS_ACCESS_KEY_ID = os.environ['s3key']  #存取金鑰ID
    AWS_SECRET_ACCESS_KEY = os.environ['s3secretkey']  #私密存取金鑰
    AWS_STORAGE_BUCKET_NAME =  'cache-cheminfo-bucket'  #S3儲存體名稱
    AWS_S3_CUSTOM_DOMAIN = f'd141zbwslk5j8a.cloudfront.net'  #使用cloudfront

    #未使用cloudfront
    # AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com' 

    #Django Storages Configuration
    AWS_S3_FILE_OVERWRITE = False  #同名檔案是否要覆寫
    AWS_DEFAULT_ACL = None
    # AWS_DEFAULT_ACL = 'public-read'
    AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl':'max-age=86400'
    }
    AWS_LOCATION = 'static'
    AWS_QUERYSTRING_AUTH = False #禁用 S3 URL 的簽名，使靜態文件的URL更容易緩存
    AWS_HEADERS ={
    'Access-Control-Allow-Origin':'*',
    }
    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'

    # MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'
    #上傳的媒體檔案
    # DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage' 



# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
